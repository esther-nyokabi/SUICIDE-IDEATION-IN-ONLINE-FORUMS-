# -*- coding: utf-8 -*-
"""Deployment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hx4z8LuYD5-dp1BAKu3WM0PssA8tCgrL
"""

!pip install streamlit
!pip install tensorflow
!pip install pandas

import streamlit as st
import pickle
import numpy as np

# Load the model
with open('model.pkl', 'rb') as file:
    model = pickle.load(file)

# Define the function for making predictions
def predict_sentiment(text):
    # Preprocess the text
    tokenizer = Tokenizer(num_words=max_features)
    tokenizer.fit_on_texts(X_train)
    
    # Make a prediction
    prediction = model.predict(text_seq)[0][0]
    
    # Return the result
    return prediction

# Define the Streamlit app
def app():
    st.title("Suicide Ideation In Online Forums")
    text = st.text_input("Enter some text")
    if text:
        prediction = predict_sentiment(text)
        if prediction > 0.5:
            st.write("Positive")
        else:
            st.write("Negative")

# Run the app
if __name__ == '__main__':
    app()

import streamlit as st
import pickle
import numpy as np
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences

# Load the model
with open('model.pkl', 'rb') as file:
    model = pickle.load(file)

# Load the tokenizer
with open('tokenizer.pkl', 'rb') as file:
    tokenizer = pickle.load(file)

# Define the function for making predictions
def predict_sentiment(text):
    # Preprocess the text
    text_seq = tokenizer.texts_to_sequences([text])
    text_seq = pad_sequences(text_seq, maxlen=200)
    
    # Make a prediction
    prediction = model.predict(text_seq)[0][0]
    
    # Return the result
    return prediction

# Define the Streamlit app
def app():
    st.title("Suicide Ideation In Online Forums")
    text = st.text_input("Enter some text")
    if text:
        prediction = predict_sentiment(text)
        if prediction > 0.5:
            st.write("Positive")
        else:
            st.write("Negative")

# Run the app
if __name__ == '__main__':
    app()